{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/bogdan/Downloads/My_First_ReactNative_App/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  useEffect(function () {\n    document.title = \"You clicked \" + count + \" times\";\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return setCount({\n        count: count + 1\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Increase\")), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(Text, {\n    style: styles.experiment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"experiment\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  experiment: {\n    backgroundColor: '#f0f'\n  },\n  button: {\n    width: 100,\n    height: 50\n  }\n});","map":{"version":3,"sources":["/Users/bogdan/Downloads/My_First_ReactNative_App/App.js"],"names":["StatusBar","React","useState","useEffect","App","count","setCount","document","title","styles","container","experiment","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","button","width","height"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEFF,QAAQ,CAAC,CAAD,CAFN;AAAA;AAAA,MAErBG,KAFqB;AAAA,MAEdC,QAFc;;AAI5BH,EAAAA,SAAS,CAAC,YAAM;AAIdI,IAAAA,QAAQ,CAACC,KAAT,oBAAgCH,KAAhC;AACD,GALQ,CAAT;AAOA,SAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AACA,IAAA,OAAO,EAAG;AAAA,aAAMJ,QAAQ,CAAC;AAAED,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAAjB,OAAD,CAAd;AAAA,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAPF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAUE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CARF;AAqBD;AAGD,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAE/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GAFoB;AAS/BN,EAAAA,UAAU,EAAE;AACVI,IAAAA,eAAe,EAAE;AADP,GATmB;AAa/BG,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,MAAM,EAAE;AAFF;AAbuB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableHighlight } from 'react-native';\n\nexport default function App() {\n\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    // function handleCounterChange(count) {\n    //   setCount(+1);\n    // }\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    // apparently, to stylize the syntax is like:\n    // style = {styles.container}\n    // 1. style => attribute for style\n    // 2. styles => an object (kind of a style.css)\n    // 3. container => a key witch contains values (the styling rules) for the respective element\n    //                 \"container\" being just a name, like class names in CSS\n    // cool!\n    <View style={styles.container}>\n      <TouchableHighlight\n      onPress={ () => setCount({ count: count + 1})}\n\n      >\n        <Text>Increase</Text>\n      </TouchableHighlight>\n      <Text>Open up App.js to start working on your app!</Text>\n      {/* experiment with style  */}\n      <Text style={styles.experiment}>experiment</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  // container style, dha\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  // experiment\n  experiment: {\n    backgroundColor: '#f0f',\n  },\n  // lol, it works!! \n  button: {\n    width: 100,\n    height: 50,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}